{"version":3,"sources":["logo.svg","components/PropertyCard.js","components/SearchSelectProperty.js","pages/PropertyList.js","pages/PropertyDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PropertyCard","data","this","props","className","containerClass","map","place","src","images","primary","alt","name","description","process","address","city","country","href","id","Component","SearchSelectProperty","onSubmit","e","searchQuery","document","getElementById","value","selectedType","preventDefault","window","location","bind","placeholder","style","backgroundImage","Leaflet","L","PropertyList","state","places","lat","lng","zoom","isFirstPage","isLastPage","nextUrl","prevUrl","searchName","isDataEmpty","arrayOfPositions","axios","get","then","res","type","filter","offset","parsedQueryString","require","parse","search","parseInt","nextOffset","prevOffset","toLowerCase","includes","setState","length","long","slice","latitude","longitude","i","coordinateArray","push","position","Object","keys","bounds","latLngBounds","Helmet","charSet","Map","center","ref","mapRef","TileLayer","attribution","url","marker","Marker","onMouseOver","target","openPopup","onMouseOut","closePopup","onClick","Popup","street","PropertyDetail","placeSlug","match","params","propertyId","slickSettings","dots","auto","arrows","infinite","speed","adaptiveHeight","slidesToShow","slidesToScroll","responsive","breakpoint","settings","aria-label","facilities","facility","others","image","App","basename","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ddf33cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react'; \r\nimport {Link} from 'react-router-dom';\r\n\r\nclass PropertyCard extends Component {\r\n    \r\n    render() {\r\n        const data = this.props.data;\r\n        return (\r\n            \r\n            <ul className={`property-list list-unstyled ${this.props.containerClass}`}>\r\n                {data.map(place => \r\n                    <li className=\"property-card\">\r\n                        <div className=\"img-container\">\r\n                            <img src={`${place.images.primary}`} alt={`${place.name}`} />\r\n                        </div>\r\n                        <div className=\"row property-desc\">\r\n                            <h3>{place.name}</h3>\r\n                            <p className=\"desc\">{place.description}</p>\r\n                        </div>\r\n                        <div className=\"row city-row\">\r\n                            <p>\r\n                                <img className=\"paper-plane-icon\" src={process.env.PUBLIC_URL + '/paper-plane.svg'} />\r\n                                {place.address.city}, {place.address.country}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"row button-row\">\r\n                            <a className=\"link-button\" href={`/React-Property-Search/place/${place.id}`}>\r\n                                Detail\r\n                            </a>\r\n                        </div>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PropertyCard;","//This component is to Render Search Box. Main Purpose is to search movie\r\n\r\nimport React, {Component} from 'react'; \r\n\r\nclass SearchSelectProperty extends Component {\r\n\r\n    render() {\r\n        //function to search with search box\r\n        var search = function (e) {\r\n            let searchQuery = document.getElementById('search-input').value;\r\n            let selectedType = document.getElementById('select-type').value;\r\n\r\n            e.preventDefault();\r\n            if(selectedType === \"apartment\"){\r\n                window.location.href=`/React-Property-Search/apartment?name=${searchQuery}`;\r\n            }\r\n            if(selectedType === \"office\"){\r\n                window.location.href=`/React-Property-Search/office?name=${searchQuery}`;\r\n            }\r\n        }\r\n      \r\n        return (\r\n            <div className=\"search-select\">\r\n                <form id=\"search-form-container\" onSubmit={search.bind(this)}>\r\n                    <input id=\"search-input\" placeholder=\"Cari properti...\" />\r\n                    <i className=\"search-icon\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/search.svg)` }}></i>\r\n                </form>\r\n\r\n                <select id=\"select-type\">\r\n                    <option value=\"apartment\">Apartment</option>\r\n                    <option value=\"office\">Office</option>\r\n                </select>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchSelectProperty;","import React, {createRef, Component} from 'react'; \r\nimport axios from 'axios';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport PropertyCard from \"../components/PropertyCard\";\r\nimport SearchSelectProperty from \"../components/SearchSelectProperty\";\r\n\r\nconst Leaflet = window.L;\r\n\r\nclass PropertyList extends Component {\r\n\r\n    state = {\r\n        places: [],\r\n        lat: -6.194925,\r\n        lng: 106.723789,\r\n        zoom: 15,\r\n        isFirstPage: true,\r\n        isLastPage: true,\r\n        nextUrl: \"\",\r\n        prevUrl: \"\",\r\n        searchName : \"\",\r\n        isDataEmpty : false,\r\n\r\n        //arrayOfPositions must be set on default value, otherwise, the code won't work. This value is random value\r\n        arrayOfPositions: [-9.852507, -15.351563],\r\n    }\r\n\r\n    componentDidMount() {\r\n        var data = [];\r\n        //execute this code to retrieve the data of offices or apartments in regards to the type of the place from the API\r\n        axios.get(`https://api.jsonbin.io/b/5ef42476e2ce6e3b2c793944`)\r\n        .then(res => {\r\n            if(this.props.type === \"apartment\") {\r\n                data = res.data.place.filter(place => place.type === \"apartment\");\r\n            }\r\n            if(this.props.type === \"office\") {\r\n                data = res.data.place.filter(place => place.type === \"office\");\r\n            }\r\n\r\n            let offset = 0;\r\n\r\n            //variables to parse query string from URL into a proper object\r\n            const queryString = require('query-string');\r\n            const parsedQueryString = queryString.parse(window.location.search);\r\n\r\n            //searchName is the name parameter in the search query on URL\r\n            const searchName = parsedQueryString.name;\r\n            if(parsedQueryString.offset){\r\n                offset = parseInt(parsedQueryString.offset);\r\n            }\r\n\r\n            //offset options config\r\n            let nextOffset = offset + 4;\r\n            let prevOffset = offset - 4;\r\n\r\n            //handling prevOffset, so the prevOffset will not be out of bounds\r\n            if(prevOffset < 0){\r\n                prevOffset = 0;\r\n            }\r\n\r\n            //assign the nextUrl and prevUrl\r\n            let nextUrl =`?offset=${nextOffset}`;\r\n            let prevUrl = `?offset=${prevOffset}`;\r\n\r\n            //function to search based on keywords\r\n            if(searchName){\r\n                data = data.filter(place=>place.name.toLowerCase().includes(searchName));\r\n\r\n                //re-assign the nextUrl and prevUrl for the pagination if the search is not empty\r\n                nextUrl = `?name=${searchName}&offset=${nextOffset}`\r\n                prevUrl = `?name=${searchName}&offset=${prevOffset}`\r\n            }\r\n\r\n            if(offset != 0){\r\n                this.setState({ \r\n                    isFirstPage: false\r\n                });\r\n            } else {\r\n                this.setState({ \r\n                    isFirstPage: true\r\n                });\r\n            }\r\n\r\n            if(offset + 4 < data.length){\r\n                this.setState({ \r\n                    isLastPage: false\r\n                });\r\n            } else {\r\n                this.setState({ \r\n                    isLastPage: true\r\n                });\r\n            }\r\n\r\n            data = data.slice(offset, offset+4);\r\n\r\n            //set lat and long default value to a proper value\r\n            var lat = -6.194925\r\n            var long = 106.723789;\r\n\r\n            if(data[0]){\r\n                lat = data[0].address.latitude;\r\n                long = data[0].address.longitude;\r\n            }\r\n\r\n            if(data <= 0){\r\n                this.setState({\r\n                    isDataEmpty: true\r\n                })\r\n            }\r\n\r\n            //set array of position in purpose to fit all markers in one map\r\n            let arrayOfPositions = []\r\n\r\n            for(let i=0;i<data.length;i++) {\r\n                let coordinateArray = [];\r\n                coordinateArray.push(data[i].address.latitude, data[i].address.longitude)\r\n                arrayOfPositions.push(coordinateArray)\r\n            }\r\n\r\n            //function to set state of places with data\r\n            this.setState({ \r\n                places: data,\r\n                lat: lat,\r\n                lng: long,\r\n                nextUrl: nextUrl,\r\n                prevUrl: prevUrl,\r\n                searchName: searchName,\r\n                arrayOfPositions: arrayOfPositions,\r\n            });\r\n        })\r\n    }\r\n    render() {\r\n        let places = this.state.places\r\n        const firstPlace = Object.keys(places)[0];\r\n        const position = [this.state.lat, this.state.lng];\r\n\r\n        //set array of position in purpose to fit all markers in one map this code is copy-pasted from https://github.com/PaulLeCam/react-leaflet/issues/190, answered by nguyendh2601 \r\n        const bounds = Leaflet.latLngBounds([this.state.arrayOfPositions]);\r\n        return (\r\n            \r\n            <div className=\"property-list-container\">\r\n                <header className=\"header-home\">\r\n                {!this.state.searchName\r\n                    ?   <Helmet>\r\n                            <meta charSet=\"utf-8\" />\r\n                            <title>Situs Pencari Apartemen dan Kantor Terpercaya</title>\r\n                        </Helmet>\r\n                    :\r\n                    <Helmet>\r\n                        <meta charSet=\"utf-8\" />\r\n                        <title>Hasil pencarian {this.props.type} \"{this.state.searchName}</title>\r\n                    </Helmet>\r\n                }\r\n                {!this.state.searchName\r\n                    ? <h1>Cari Apartemen & Kantor Impian Anda di Sini!</h1>\r\n                    : <h1>Hasil pencarian {this.props.type} \"{this.state.searchName}\"</h1>\r\n                }\r\n                    <SearchSelectProperty />\r\n                </header>\r\n                {!this.state.isDataEmpty\r\n                ?\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"grid-container-2 responsive\">\r\n                        <div className=\"grid-item\">\r\n                            <PropertyCard containerClass=\"grid-container-2 responsive\"\r\n                            type={`${this.props.type}`}\r\n                            data={places}\r\n                            />\r\n                            <div className=\"pagination-container\">\r\n                                {!this.state.isFirstPage && \r\n                                    <a id=\"prev-button\" href={this.state.prevUrl}>Previous</a>\r\n                                }\r\n\r\n                                {!this.state.isLastPage && \r\n                                    <a id=\"next-button\" href={this.state.nextUrl}>Next</a>\r\n                                }\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"grid-item\">\r\n                            <Map center={position} zoom={this.state.zoom} ref={this.mapRef} bounds={bounds}>\r\n                                <TileLayer\r\n                                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                />\r\n\r\n                                {places.map(marker =>\r\n                                    <Marker \r\n                                        position={[marker.address.latitude, marker.address.longitude]}\r\n\r\n                                        //show and unshow popup when hovered\r\n                                        onMouseOver={(e) => {\r\n                                            e.target.openPopup();\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            e.target.closePopup();\r\n                                        }}\r\n\r\n                                        //onclick di sini untuk navigate ke halaman detail ketika diklik. Onclick ini sebenarnya kurang bagus untuk SEO, kecuali jika di GTM ditanam sebuah code untuk tracking ke analitik\r\n                                        onClick={() => window.location.href=`/React-Property-Search/place/${marker.id}`}\r\n                                        \r\n                                    >\r\n                                        <Popup>\r\n                                            <strong>{marker.name}</strong><br></br>\r\n                                            {marker.address.street}\r\n                                        </Popup>\r\n                                    </Marker>\r\n                                )}\r\n                            </Map>                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <h2 className=\"text-centered\">Tidak ditemukan apartemen atau kantor</h2>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PropertyList;","import React, {Component} from 'react'; \r\nimport {Helmet} from \"react-helmet\";\r\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport axios from 'axios';\r\n\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nclass PropertyDetail extends Component {\r\n    state = {\r\n        place: [],\r\n        zoom: 16,\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        const placeSlug = this.props.match.params.propertyId;\r\n\r\n        //execute this code to retrieve the data of offices and apartments from the API\r\n        axios.get(`https://api.jsonbin.io/b/5ef42476e2ce6e3b2c793944`)\r\n        .then(res => {\r\n            //sebenarnya, untuk potongan kode yang ini seharusnya menggunakan find karena hanya butuh satu object saja, tapi karena terus menemui error ketika hendak print nilai nested object, maka jadi pakai cara filter\r\n            let places = res.data.place.filter(place => place.id === parseInt(placeSlug));\r\n\r\n            this.setState({ \r\n                place: places,\r\n            });\r\n        })\r\n\r\n    }\r\n    render() {\r\n        var data = this.state.place[0];\r\n        //settings for slick for image carousel\r\n        let slickSettings = {\r\n            dots: false,\r\n            auto: false,\r\n            arrows: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            adaptiveHeight: true,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            responsive: [\r\n                {\r\n                  breakpoint: 768,\r\n                  settings: {\r\n                    slidesToShow: 1.25,\r\n                    arrows: false,\r\n                  }\r\n                }\r\n              ]\r\n        };\r\n\r\n        return (\r\n            <div className=\"property-detail-container\">\r\n                {this.state.place.map(place =>\r\n                <Helmet>\r\n                    <meta charSet=\"utf-8\" />\r\n                    <title>{place.name}</title>\r\n                </Helmet>\r\n                )}\r\n                \r\n                {this.state.place.map(place =>\r\n                <div \r\n                    className=\"main-banner\"\r\n                    aria-label=\"Main Banner\" \r\n                    style={{ backgroundImage: `url(${place.images.primary})` }}\r\n                ></div>\r\n                )}\r\n                                    \r\n                <div className=\"container\">\r\n\r\n                    {this.state.place.map(place => \r\n                        <h1>{place.name}</h1> \r\n                    )}\r\n\r\n                    {this.state.place.map(place => \r\n\r\n                        <div className=\"grid-container-2 responsive\">\r\n                        <div className=\"grid-item\">\r\n                            <div className=\"row\">\r\n                                <h3>Description</h3>\r\n                                <article>\r\n                                    {place.description}\r\n                                </article>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <h3>Facilities</h3>\r\n                                <ul className=\"list-unstyled facilities-list\">\r\n                                    {place.facilities.map(facility =>\r\n                                        <li>{facility}</li>\r\n                                    ) \r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"grid-item\">\r\n                            <div className=\"row\">\r\n                                <h3>Location</h3>\r\n                                <p>\r\n                                    {place.address.street}\r\n                                </p>\r\n                                <Map center={[place.address.latitude, place.address.longitude]} zoom={this.state.zoom}>\r\n                                    \r\n                                    <TileLayer\r\n                                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                    />\r\n\r\n                                    <Marker \r\n                                        position={[place.address.latitude, place.address.longitude]}\r\n                                        onMouseOver={(e) => {\r\n                                            e.target.openPopup();\r\n                                        }}\r\n                                        onMouseOut={(e) => {\r\n                                            e.target.closePopup();\r\n                                        }}\r\n                                    >\r\n                                        <Popup>\r\n                                            <strong>{place.name}</strong><br></br>\r\n                                            {place.address.street}\r\n                                        </Popup>\r\n                                    </Marker>\r\n                                \r\n                                </Map>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n\r\n                    {/* rendering carousel */}\r\n                    {this.state.place.map(place =>\r\n                        <div className=\"slider-wrapper\">\r\n                            <h2>Images</h2>\r\n                            <Slider {...slickSettings}>\r\n                                {place.images.others.map(image =>\r\n                                    <div>\r\n                                        <img src={`${image}`} alt={`${place.name} - Photo`} />\r\n                                    </div>\r\n                                )}\r\n                            </Slider>\r\n                        </div>                            \r\n                    )}              \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default PropertyDetail;","import React from 'react';\nimport logo from './logo.svg';\nimport PropertyList from './pages/PropertyList.js';\nimport PropertyDetail from './pages/PropertyDetail.js';\nimport './App.scss';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router basename=\"/React-Property-Search\">\n      <div className=\"App\">\n        <Route exact path=\"/\">\n          <PropertyList type=\"apartment\" />\n        </Route>\n        <Route exact path=\"/React-Property-Search/apartment\">\n          <PropertyList type=\"apartment\" />\n        </Route>\n        <Route exact path=\"/React-Property-Search/office\">\n          <PropertyList type=\"office\" />\n        </Route>\n        \n        {/* I use switch for nested routes, so those components will be rendered inclusively and it will be helpful for nested URLs */}\n        <Switch>\n          <Route exact path=\"/React-Property-Search/place/:propertyId\" component={PropertyDetail}>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}